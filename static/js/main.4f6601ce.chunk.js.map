{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","getMovie","a","fetch","response","json","FindMovie","props","useState","setMovie","query","setQuery","isFound","setIsFound","findMovie","data","Response","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","disabled","onAdd","App","setMovies","newMovie","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f6601ce.chunk.js","sourcesContent":["import { FC } from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: FC<Props> = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import { FC } from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        {...movie}\n      />\n    ))}\n  </div>\n);\n","const API_URL = 'http://www.omdbapi.com/?apikey=c01d3eb8&';\n\nexport const getMovie = async (title: string) => {\n  const response = await fetch(`${API_URL}&t=${title}`);\n\n  return response.json();\n};\n","import { FC, useState } from 'react';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const FindMovie: FC<Props> = (props) => {\n  const [movie, setMovie] = useState(null as Movie | null);\n  const [query, setQuery] = useState('');\n  const [isFound, setIsFound] = useState(true);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setIsFound(true);\n  };\n\n  const findMovie = async () => {\n    const data = await getMovie(query);\n\n    if (data.Response === 'False') {\n      setIsFound(false);\n      setMovie(null);\n\n      return;\n    }\n\n    setMovie({\n      title: data.Title,\n      description: data.Plot,\n      imgUrl: data.Poster,\n      imdbUrl: `https://www.imdb.com/title/${data.imdbID}/`,\n      imdbId: data.imdbID,\n    });\n\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input\"\n              value={query}\n              onChange={handleChange}\n            />\n          </div>\n          {isFound || (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!movie}\n              onClick={() => {\n                props.onAdd(movie as Movie);\n                setMovie(null);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && (\n          <MovieCard {...movie} />\n        )}\n      </div>\n    </>\n  );\n};\n","import { FC, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App: FC = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = (newMovie: Movie) => {\n    if (!movies.some(movie => movie.imdbId === newMovie.imdbId)) {\n      setMovies([newMovie, ...movies]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}